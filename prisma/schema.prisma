generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model GuildOption {
    guildId String @unique

    banChannelId String @default("")
    banMessageEnabled Boolean @default(false)

    unbanChannelId String @default("")
    unbanMessageEnabled Boolean @default(false)
    
    welcomeChannelId String @default("")
    welcomeMessage String @default(":wave: 안녕하세요, {user}님!")
    welcomeMessageEnabled Boolean @default(false)

    goodbyeChannelId String @default("")
    goodbyeMessage String @default(":cry: {user}님이 나가셨습니다.")
    goodbyeMessageEnabled Boolean @default(false)

    logChannelId String @default("")
    logEnabled Boolean @default(false)

    checkModsMessage Boolean @default(false)
    useBlockwordDisabledChannel Boolean @default(false)
    blockwordDisabledChannelId String @default("")
    useEnhancedFilter Boolean @default(true)

    useLevelSystem Boolean @default(true)
    levelUpMessage String @default(":partying_face: {user}님의 레벨이 올랐습니다! Level {beforelevel} -> {afterlevel}")
    levelUpMessageEnabled Boolean @default(true)
    levelUpChannelId String @default("")
    messageInLevelupChannel Boolean @default(true)

    setCommandMessageAsEphemeral Boolean @default(false)

    warningLimit Int @default(10)

    allowModAccessDashboard Boolean @default(true)
}

model GuildChannel {
    guildId String
    channelId String @unique
    channelName String
    channelType Int
}

model GuildData {
    guildId String @unique
    name String
    ownerId String
    icon String

    memberCount Int
    botCount Int
    region String
    createdAt DateTime
    isPartner Boolean
    isVerified Boolean
    premiumTier Int
    premiumSubscriptionCount Int
    description String

    isCommunityGuild Boolean @default(false)
    isSubscribed Boolean @default(false)
    isBotRoleHighest Boolean @default(false)
}

model GuildBan {
    userId String @unique
    guildId String
    username String
    tag String
    profileImg String
    reason String
    createdAt DateTime @default(now())
}

model UserData {
    id String @unique
    username String
    tag String
    profileImg String
    bannedGuild String[] @default([])
    ownedGuild String[] @default([])
    modGuild String[] @default([])
    point Int @default(25000)
    currentPlan String @default("Free")
    preminumStartedAt DateTime @default(now())
    gambleCount Int @default(0)
    createdAt DateTime
}

model MemberData {
    uniqueId Int @id @default(autoincrement())
    userId String
    guildId String
    username String
    nickname String
    tag String
    profileImg String

    mod Boolean @default(false)
    isOwner Boolean @default(false)
    isBot Boolean @default(false)
    isBoosting Boolean @default(false)

    joinedAt DateTime
    exp Int @default(0)
    level Int @default(1)
    warning Int @default(0)
}

model Blockword {
    uniqueId Int @id @default(autoincrement())
    guildId String @unique
    word String[] @default([])
}

model ErrorLog {
    id Int @id @default(autoincrement())
    content Json
    createdAt DateTime @default(now())
}

model GuildRole {
    id String @unique
    name String
    guildId String
    type String
}

model GuildLogSetting {
    guildId String @unique

    userCreate Boolean @default(false)
    userDelete Boolean @default(false)

    addMod Boolean @default(false)
    removeMod Boolean @default(false)

    useCommand Boolean @default(false)

    useBlockword Boolean @default(false)
    addBlockword Boolean @default(false)
    removeBlockword Boolean @default(false)

    removeMessage Boolean @default(false)

    levelUp Boolean @default(false)

    addRoleToMember Boolean @default(false)
    removeRoleToMember Boolean @default(false)
    roleCreate Boolean @default(false)
    roleDelete Boolean @default(false)
    roleUpdate Boolean @default(false)

    addBan Boolean @default(false)
    removeBan Boolean @default(false)

    getWarning Boolean @default(false)
    removeWarning Boolean @default(false)
}

model GuildLog {
    uniqueId Int @id @default(autoincrement())
    guildId String
    type String
    content String
    rawContent String
    createdAt DateTime
}

model CoinData {
    id Int @id @default(autoincrement())
    name String
    price Int
    createdAt DateTime @default(now())

    priceHistory Int[] @default([])
}

model UserCoinData {
    uniqueId Int @id @default(autoincrement())
    userId String
    coinId Int

    name String
    amount Int @default(0)
    createdAt DateTime @default(now())
}

model CoinComment {
    id Int @id @default(autoincrement())
    authorId String
    coinId Int
    likes Int @default(0)
    content String
    createdAt DateTime @default(now())
}

model VoteSetting {
    uniqueId Int @id @default(autoincrement())
    id String @unique
    authorId String
    title String
    description String
    options String[] @default([])
    
    mentionEveryone Boolean @default(false)
    hideResult Boolean @default(false)
    onlyAdmin Boolean @default(false)
    allowChange Boolean @default(true)
}

model VoteData {
    uniqueId Int @id @default(autoincrement())
    targetId String
    voterTag String
    voterId String
    value String
}

model Statistic {
    id Int @id @default(autoincrement())

    totalGuilds Int @default(0)
    totalUsers Int @default(0)
    totalVote Int @default(0)
    totalVoteOptions Int @default(0)
    totalWarning Int @default(0)

    totalUsedPoint Int @default(0)
    todayUsedPoint Int @default(0)

    totalUsedCommand Int @default(0)
    todayUsedCommand Int @default(0)

    totalCoinComment Int @default(0)
    todayCoinComment Int @default(0)

    todayGambleCount Int @default(0)
    totalGambleCount Int @default(0)

    createdAt DateTime @default(now())
}
